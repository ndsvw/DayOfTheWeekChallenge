@using System.Globalization;

@if (!IsDateValid)
{
    <Alert Color="Color.Danger" Visible="true" Class="mt-3">
        Please select a date after @(new DateTime(1600, 1, 1).ToString("d", CultureInfo.CurrentCulture))
    </Alert>
}
else {
    <style>
        b.red{
            color: red;
        }
        b.blue{
            color: blue;
        }
        b.orange{
            color: orange;
        }
        b.black{
            color: black;
        }
    </style>

    <div @attributes="InputAttributes">
        <Alert Color="Color.Primary" Visible="true">
            <Heading Size="HeadingSize.Is2" TextColor="TextColor.Dark" Class="mt-3">
                @Date.ToString("d", CultureInfo.CurrentCulture)
            </Heading>

            <!-- Step 1 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 1: Finding out the Year code
            </Heading>
            <Paragraph>
                <b class="red">@Calculation.Step1ValueA</b> / 4 = <b class="blue">@Calculation.Step1ValueB</b><br />
                <b class="red">@Calculation.Step1ValueA</b> + <b class="blue">@Calculation.Step1ValueB</b> = <b class="orange">@Calculation.Step1ValueC</b><br />
                <b class="orange">@Calculation.Step1ValueC</b> modulo 7 = <b class="black">@Calculation.Step1ValueD</b>
            </Paragraph>
            <Paragraph>
                <u>or more efficient (smaller numbers):</u><br />
                <b class="red">@Calculation.Step1ValueA</b> / 4 = <b class="blue">@Calculation.Step1ValueB</b><br />
                <b class="blue">@Calculation.Step1ValueB</b> modulo 7 = <b class="blue">@Calculation.Step1EfficientValueB</b><br />
                <b class="red">@Calculation.Step1ValueA</b> modulo 7 = <b class="red">@Calculation.Step1EfficientValueA</b><br />
                <b class="red">@Calculation.Step1EfficientValueA</b> + <b class="blue">@Calculation.Step1EfficientValueB</b> = <b class="orange">@Calculation.Step1EfficientValueC</b><br />
                <b class="orange">@Calculation.Step1EfficientValueC</b> modulo 7 = <b class="black">@Calculation.Step1ValueD</b>
            </Paragraph>
            <Paragraph>
                <u>The most efficient way would be: Learning all the 100 numbers (<b class="red">@Calculation.Step1ValueA</b> -> <b class="black">@Calculation.Step1Code</b> in this case)</u>
            </Paragraph>

            <!-- Step 2 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 2: Finding out the Centenary code
            </Heading>
            <Paragraph>
                <u>The Centenary codes should be known (and not being calculated) as there are not many relevant ones (see <a href="https://localhost:5001/resources">Centenaries - Numeric</a>).</u><br />
            </Paragraph>
            <Paragraph>
                The Centenary code of <b class="red">@(Calculation.Step2ValueA)XX</b> is <b class="black">@Calculation.Step2Code</b>
            </Paragraph>

            <!-- Step 3 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 3: Finding out the Month code
            </Heading>
            <Paragraph>
                <u>The Month codes should be known (and not being calculated) as there are not many (see <a href="https://localhost:5001/resources">Months - Numeric</a>).</u><br />
            </Paragraph>
            <Paragraph>
                The Month code of <b class="red">@Calculation.Step3MonthName</b> is <b class="black">@Calculation.Step3Code</b>
            </Paragraph>

            <!-- Step 4 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 4: Finding out the Day code
            </Heading>
            <Paragraph>
                <b class="red">@Calculation.Step4ValueA</b> modulo 7 = <b class="black">@Calculation.Step4Code</b><br />
            </Paragraph>

            <!-- Step 5 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 5: Leap year check
            </Heading>
            @if (Date.Month >= 3)
            {
                <Paragraph>
                    We do only need to make the leap year check for dates in January or February.
                    So we don't need to do anything.
                </Paragraph>
            }
            else if (Date.Year % 4 > 0)
            {
                <Paragraph>
                    The month of the date is January or February. That means that we need to make the leap year check:<br />
                    <b class="red">@(Date.Year)</b> modulo 4 is not equal to 0.<br />
                    So this is not a leap year and we don't need to do anything.
                </Paragraph>
            }
            else if (Date.Year % 4 == 0 && Date.Year % 100 != 0)
            {
                <Paragraph>
                    The month of the date is January or February. That means that we need to make the leap year check:<br />
                    <b class="red">@(Date.Year)</b> modulo 4 is equal to 0<br />
                    and <b class="red">@(Date.Year)</b> modulo 100 is not equal to 0<br />
                    So this is a leap year and we need to subtract <b class="black">1</b> in the last step.
                </Paragraph>
            }
            else if (Date.Year % 4 == 0 && Date.Year % 100 == 0 && Date.Year % 400 != 0)
            {
                <Paragraph>
                    The month of the date is January or February. That means that we need to make the leap year check:<br />
                    <b class="red">@(Date.Year)</b> modulo 4 is equal to 0<br />
                    but <b class="red">@(Date.Year)</b> modulo 100 is equal to 0<br />
                    and <b class="red">@(Date.Year)</b> modulo 400 is not equal to 0<br />
                    So this is not a leap year and we don't need to do anything.
                </Paragraph>
            }
            else
            {
                <Paragraph>
                    The month of the date is January or February. That means that we need to make the leap year check:<br />
                    <b class="red">@(Date.Year)</b> modulo 4 is equal to 0<br />
                    but <b class="red">@(Date.Year)</b> modulo 100 is equal to 0<br />
                    but <b class="red">@(Date.Year)</b> modulo 400 is also equal to 0<br />
                    So this is a leap year and we need to subtract <b class="black">1</b> in the last step.
                </Paragraph>
            }

            <!-- Step 6 -->
            <!-- ------ -->
            <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success" Class="text-left">
                Step 6: Adding up all codes
            </Heading>
            <Paragraph>
                Code from Step 1: <b class="red">@Calculation.Step1Code</b><br />
                Code from Step 2: <b class="red">@Calculation.Step2Code</b><br />
                Code from Step 3: <b class="red">@Calculation.Step3Code</b><br />
                Code from Step 4: <b class="red">@Calculation.Step4Code</b><br />
                Code from Step 5: <b class="red">@(Calculation.Step5AbsoluteCode == 1 ? -1 : 0)</b><br />
                <br />
                <b class="red">@Calculation.Step1Code</b>
                + <b class="red">@Calculation.Step2Code</b>
                + <b class="red">@Calculation.Step3Code</b>
                + <b class="red">@Calculation.Step4Code</b>
                @if (@Calculation.Step5AbsoluteCode == 1)
                {
                    <span>
                        - <b class="red">1</b>
                    </span>
                }
                = <b class="black">@Calculation.Step6ValueA</b><br />
                <b class="black">@Calculation.Step6ValueA</b> modulo 7 = <b class="black">@Calculation.Step6ValueB</b><br />
                <b class="black">@Calculation.Step6ValueB</b> means <b class="black">@Calculation.Step6Dotw</b>
            </Paragraph>
        </Alert>
    </div>
}


@code {
    private DateTime m_DateTime;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> InputAttributes { get; set; }

    [Parameter]
    public DateTime Date {
        get => m_DateTime;
        set {
            m_DateTime = value;
            try
            {
                Calculation = new DotwCalculation(value);
                IsDateValid = true;
            } catch(ArgumentException)
            {
                IsDateValid = false;
            }
        }
    }

    private DotwCalculation Calculation { get; set; }

    private bool IsDateValid = true;
}