@inherits LayoutComponentBase
@using Microsoft.Extensions.Logging;
@using System.Globalization; 
@inject ILogger<AnswerHistory<TAnswer>> logger;

@if (UserAnswers.Count > 0)
{
    <div @attributes="InputAttributes">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Question</th>
                        <th scope="col">Given answer</th>
                        <th scope="col">Correct answer</th>
                        <th scope="col">Time</th>
                    </tr>
                </thead>
                <tbody>
                    <Virtualize Context="a" Items="@(UserAnswers.Select((userAnswer, index) => (index, userAnswer)).Reverse().ToList())" OverscanCount="10">
                        <ItemContent>
                            <tr class="@(a.userAnswer.AnsweredCorrectly ? "table-success" : "table-danger")">
                                <td>@(a.index + 1)</td>
                                <td>@(a.userAnswer.Question)</td>
                                <td>@(ConvertValue(a.userAnswer.GivenAnswer))</td>
                                <td>@(ConvertValue(a.userAnswer.CorrectAnswer))</td>
                                <td>@(((int)a.userAnswer.Time.TotalMilliseconds).ToString("N0")) ms</td>
                            </tr>
                        </ItemContent>
                        <Placeholder>
                            <p>
                                Loading&hellip;
                            </p>
                        </Placeholder>
                    </Virtualize>
                </tbody>
            </table>
        </div>
    </div>
}

@typeparam TAnswer

@code{
    [Parameter]
    public List<UserAnswer<TAnswer>> UserAnswers { get; set; }

    [Parameter]
    public Func<TAnswer, string> ConvertValue { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> InputAttributes { get; set; }
}